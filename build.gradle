apply plugin: 'idea'
apply plugin: 'java'

repositories {
  flatDir dirs: "${rootDir}/lib"
  mavenCentral()
}

dependencies {
  compile 'org.apache.commons:commons-lang3:3.1'
  compile 'com.google.guava:guava:14.0.1'
  compile 'com.google.inject:guice:3.0'
  compile 'org.apache.hadoop:hadoop-core:1.2.1'
//  compile 'org.apache.hadoop:hadoop-common:2.0.5-alpha'
//  compile 'org.apache.hadoop:hadoop-hdfs:2.0.5-alpha'

  compile 'org.mockito:mockito-all:1.9.5'
  compile 'org.easytesting:fest-assert:1.4'
  compile 'junit:junit:4.11'
  compile 'org.apache.hadoop:hadoop-test:1.2.1'
}

/*
// Tried the libjars approach to set classpath instead of doing the fatjar, but can't make it work :(
task runOnHadoop(type: Exec, dependsOn: jar) {
    def allJars = []
    for (file in configurations.compile) {
      allJars.add('file://' + file)
    }

   environment 'LIBJARS', allJars.join(',')
   commandLine '/home/przemek/hadoop/bin/hadoop', 'jar', files(jar.archivePath).singleFile, 'pl.rtshadow.lem.benchmarks.RealHdfsRunner',
   '-libjars', allJars.join(',')
}
*/

jar {
  dependsOn configurations.runtime
  from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
}

task runOnHadoop(type: Exec, dependsOn: jar) {
   commandLine '/home/przemek/hadoop/bin/hadoop', 'jar', files(jar.archivePath).singleFile, 'pl.rtshadow.lem.benchmarks.RealHdfsRunner'
}

